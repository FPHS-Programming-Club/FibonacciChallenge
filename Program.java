import java.io.FileWriter;
import java.io.IOException;
import java.math.BigInteger;
import java.util.Scanner;

// DO NOT EDIT THIS FILE!!!
// This file contains the testing scripts for the program.
// The file you should edit is "Fibonacci.java"
public class Program
{
    public static void main(String[] args) throws Exception
    {
        Scanner scan = new Scanner(System.in);
        System.out.print("Press 1 for timed test, 2 for debug test (slightly slower) > ");

        int index;
        do
        {
            index = scan.nextInt();
            switch (index)
            {
                case 1:
                    scan.close();
                    TimedTest();
                    break;

                case 2:
                    scan.close();
                    TimedTestDebug();
                    break;

                default:
                    System.out.print("  Unknown > ");
                    index = -1;
                    break;
            }
        } while (index == -1);
    }

    public static void TimedTest()
    {
        Fibonacci code = new Fibonacci();

        System.out.print("Running... ");
        long start = System.nanoTime(),
             end = start + 1_000_000_000;

        int num = 0;
        code.testStart();
        while (System.nanoTime() < end) code.calculate(num++);
        System.out.printf("Done.\nResult: %d\n", num - 1);
    }

    public static void TimedTestDebug() throws IOException
    {
        Fibonacci code = new Fibonacci();

        FileWriter output = new FileWriter("timings.csv");;
        output.write("Index,Time,Number\n");
        System.out.print("Running... ");

        long start = System.nanoTime(),
             end = start + 1_000_000_000;

        int num = 0;
        code.testStart();
        BigInteger prev = BigInteger.ZERO, result = BigInteger.ZERO;
        while (System.nanoTime() < end)
        {
            prev = result;
            result = code.calculate(num++);

            long time = System.nanoTime() - start;
            output.write(num + "," + time * 1e-9 + "," + result + "\n");
        }
        output.close();
        System.out.printf("Done.\nResult: %d (Final Value %d)\n", num - 1, prev);
    }
}
