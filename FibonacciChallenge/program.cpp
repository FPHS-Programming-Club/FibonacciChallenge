#include <chrono>
#include <fstream>
#include <iostream>
#include "fibonacci.h"

using namespace std;
using namespace std::chrono;
typedef time_point<high_resolution_clock, nanoseconds> fib_time_point;

// DO NOT EDIT THIS FILE!!!
// This file contains the testing scripts for the program.
// The file you should edit is "fibonacci.cpp"
static void timed_test();
static void timed_test_debug();

int main()
{
    printf("Press 1 for timed test, 2 for debug test (slightly slower) > ");
    int index;
_retry:
    cin >> index;
    switch (index)
    {
    case 1:
        timed_test();
        break;

    case 2:
        timed_test_debug();
        break;

    default:
        printf("  Unknown > ");
        goto _retry;
    }

    return 0;
}

void timed_test()
{
    printf("Running... ");
    fib_time_point start = high_resolution_clock::now(),
                   end = start + seconds(1);

    int num = 0;
    test_start();
    while (high_resolution_clock::now() < end) calculate(num++);
    printf("Done.\nResult: %d", num - 1);
}

void timed_test_debug()
{
    ofstream output = ofstream("timings.csv");
    output << "Index,Time,Number\n";
    printf("Running... ");

    fib_time_point start = high_resolution_clock::now(),
                   end = start + seconds(1);

    int num = 0;
    test_start();
    number prev = 0, result = 0;
    while (high_resolution_clock::now() < end)
    {
        prev = result;
        result = calculate(num++);

        fib_time_point now = high_resolution_clock::now();
        nanoseconds time = now - start;
        output << num << ',' << time.count() * 1e-9 << ',' << result.str() << endl;
    }
    output.close();
    printf("Done.\nResult: %d (Final Value %s)", num - 1, prev.str().c_str());
}
